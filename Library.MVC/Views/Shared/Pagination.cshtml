@model PaginationModel

@using Services.Models;

@if (Model.TotalPages > 1)
{
    <ul class="pagination justify-content-center">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item previous"><a class="page-link" href="@Model.PageActionLink.Replace("%7Bpage%7D", (Model.PageIndex - 1).ToString())">« Inapoi</a></li>
        }
        else
        {
            <li class="page-item previous-off disabled"> <a class="page-link" href="#">« Inapoi </a></li>
        }

        @for (int page = Model.LeftMargin; page <= Model.RightMargin; page++)
        {
            if (page == Model.PageIndex)
            {
                <li class="page-item active"><a class="page-link" href="#">@page.ToString()</a></li>
            }
            else
            {
                <li class="page-item"><a class="page-link paginationCstRslt" id="custPage_@page" href="@Model.PageActionLink.Replace("%7Bpage%7D", page.ToString())">@page.ToString()</a></li>
            }
        }

        @if (Model.HasNextPage)
        {
            <li class="page-item next"><a class="page-link" href="@Model.PageActionLink.Replace("%7Bpage%7D", (Model.PageIndex + 1).ToString())">Inainte »</a></li>
        }
        else
        {
            <li class="page-item next-off disabled"><a class="page-link" href="#">Inainte »</a></li>
        }
    </ul>
}


